trigger:
- main

pool:
  name: Default

variables:
  bicepArtifactName: biceps
  dockerRegistryUrl: 'platformsreacr.azurecr.io'
  imageName: 'sampleweb'
  imageTag: 'latest'
  dockerRegistryServiceConnection: 'proton-account-docker-conn-01'

jobs:
- job: Build
  workspace:
    clean: all    
  displayName: 'Publish bicep to artifact'  
  steps:
  - task: Docker@2
    displayName: 'Build Docker image'
    inputs:
      command: 'build'
      Dockerfile: '**/Dockerfile'
      tags: |
        $(dockerRegistryUrl)/$(imageName):$(imageTag)


  - task: Docker@2
    displayName: 'Push Docker image'
    inputs:
      command: 'push'
      repository: '$(dockerRegistryUrl)/$(imageName)'
      tags: |
        $(imageTag)
      dockerRegistryServiceConnection: $(dockerRegistryServiceConnection)  

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(System.DefaultWorkingDirectory)/biceps'
      artifactName: $(bicepArtifactName)
    displayName: 'publish biceps to Azure DevOps - $(bicepArtifactName)'

- deployment: Deploy
  environment: platformsre-test
  dependsOn: Build 
  displayName: 'Deploy To Azure'
  strategy:
    runOnce:
      deploy:
        steps:
        - task: AzureResourceManagerTemplateDeployment@3
          displayName: 'Deploy Biceps files'        
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: proton-account-svc-conn-01
            subscriptionId: 'd7ab4684-6d5e-4bd3-a6c5-93965b7c0cdc'
            action: 'Create Or Update Resource Group'
            resourceGroupName: 'platformsre-rg'
            location: 'swedencentral'
            templateLocation: 'Linked artifact'
            csmFile: '$(Pipeline.Workspace)/$(bicepArtifactName)/main.bicep'
            deploymentMode: 'Incremental'

        - task: AzureCLI@2
          displayName: 'Deploy Docker container'
          inputs:
            azureSubscription: 'proton-account-svc-conn-01'
            scriptType: 'bash'
            scriptLocation: 'inlineScript'
            inlineScript: |
              az container create \
                --resource-group $(resourceGroupName) \
                --name sampleweb-ci \
                --image $(dockerRegistryUrl)/$(imageName):$(imageTag) \
                --dns-name-label platformsre-sampleweb \
                --ports 80 \
                --registry-login-server $(dockerRegistryUrl) 

